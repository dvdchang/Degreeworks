# $Id: //Tuxedo/RELEASE/Product/sis_Banner/release/admin/common/bannerextract.config#6 $

#######################################################################
# $ADMIN_HOME/common/bannerextract.config
# This file is read by the Banner extracts: ban40.ec-ban45.ec, dap58s.c
# You may alter the FROM and WHERE SQL here to change what records are
#     read in the Banner database.
# The FROM  for each table is limited to 1000 characters.
# The WHERE for each table is limited to 3000 characters.
# The Student's PIDM is added to the end of many of these WHERE clauses's
# where indicated. Some tables (e.g., SCBCRSE) do not use the PIDM. 
#      (Example: " AND a.SGBSTDN_PIDM = <students-pidm> ")
# 
# NOTE: Two special "CALCFCN" sets of records have been added at the
#       beginning of this file for the Banner "F_CLASS_CALC_FNC",
#       one for students (LEARNER) and one for applicants (ADMISSIONS). 
#       Make sure to load the correct FROM and WHERE SQL clauses used 
#       to calculate the Student and/or Applicant Class Standing from:
#                PIDM + LEVL_CODE + TERM_CODE.
#       *** The "WHERE" must NOT be included in this entry and ***
#       *** the last entry must NOT end with an "AND"!!!       ***
#######################################################################

################### CLASS STANDING (ban40) ############################
################### F_CLASS_CALC_FNC (LEARNER) ########################

# F_CLASS_CALC_FNC:  PIDM + LEVL_CODE + TERM_CODE
# ********                                        ************
# NO WHERE on the first "CALCFNC-where:" line and NO Final AND
# ********                                        ************
CALCFNC-from:  FROM SGBSTDN a
CALCFNC-where: a.SGBSTDN_TERM_CODE_EFF =
CALCFNC-where:   (SELECT MAX(b.SGBSTDN_TERM_CODE_EFF)
CALCFNC-where:    FROM SGBSTDN b WHERE b.SGBSTDN_PIDM = a.SGBSTDN_PIDM)
# F_CLASS_CALC_FNC = PIDM + LEVL_CODE + TERM_CODE

################### F_CLASS_CALC_FNC (ADMISSIONS) #####################

# F_CLASS_CALC_FNC:  PIDM + LEVL_CODE + TERM_CODE
# ********                                        ************
# NO WHERE on the first "CALCFN2-where:" line and NO Final AND
# ********                                        ************
CALCFN2-from:  FROM SARADAP a
CALCFN2-where: a.SARADAP_TERM_CODE_ENTRY =
CALCFN2-where:   (SELECT MAX(b.SARADAP_TERM_CODE_ENTRY)
CALCFN2-where:    FROM SARADAP b WHERE b.SARADAP_PIDM = a.SARADAP_PIDM)
# F_CLASS_CALC_FNC = PIDM + LEVL_CODE + TERM_CODE

################### GOBUMAP - UDC_ID (ban40/ban45) #####################

# GOBUMAP must be a; AND is required at the end of the WHERE 
GOBUMAP-from:  FROM GOBUMAP a
GOBUMAP-where: WHERE  
#                    a.GOBUMAP_PIDM = <students-pidm>

################### GOREMAL - EMAIL Address (ban40)  ###################

# GOREMAL must be a; AND is required at the end of the WHERE
GOREMAL-from:  FROM GOREMAL a
GOREMAL-where: WHERE a.GOREMAL_STATUS_IND = 'A' 
GOREMAL-where:   AND
#                    a.GOREMAL_PIDM = <students-pidm>

################### SARADAP - APPLICANT (ban40)  #######################

# SARADAP must be a; AND is required at the end of the WHERE
# Used if no 'ADMISSIONS' SORLCUR/SORLFOS records are found and if
# the UCX-CFG020 LoadSARADAPGoal = 'Y'
SARADAP-from:  FROM SARADAP a
SARADAP-where: WHERE  a.SARADAP_TERM_CODE_ENTRY =
SARADAP-where:       (SELECT MAX(b.SARADAP_TERM_CODE_ENTRY)
SARADAP-where:        FROM SARADAP b
SARADAP-where:        WHERE b.SARADAP_PIDM = a.SARADAP_PIDM)
SARADAP-where:   AND
#                    a.SARADAP_PIDM = <applicant's-pidm>

################### SARADAPC - APPLICANT (ban40)  #####################

# SARADAP must be a; AND is required at the end of the WHERE
# This record is linked to the 'ADMISSIONS' SORLCUR record using the
# SORLCUR_PIDM, SORLCUR_TERM_CODE and SORLCUR_KEY_SEQNO 
SARADAPC-from:   FROM SARADAP a, SORLCUR c
SARADAPC-where:  WHERE 
#     a.SARADAP_PIDM = <applicant's-pidm>                           AND
#     a.SARADAP_TERM_CODE_ENTRY = <applicant's SORLCUR_TERM_CODE>   AND
#     a.SARADAP_APPL_NO = <applicant's SORLCUR_KEY_SEQNO>
SARADAPC-where:  AND

################### SCBCRKY1 - COURSE (ban41)  #########################
 
# GetSCBCRKY; Gets SCBCRKY record with highest SCBCRKY_TERM_CODE_END.
# SCBCRKY must be a; AND is required at the end of the WHERE.
# The Subject Code and Course Number will be added by ban41
# to the end of the WHERE clause.
SCBCRKY1-from:  FROM SCBCRKY a
SCBCRKY1-where: WHERE  
#                     SCBCRKY_SUBJ_CODE = <Subj Code> AND     
#                     SCBCRKY_CRSE_NUMB = <Crse Numb>                     
#SCBCRKY1-where: AND  

################### SCBCRKY - SCBCRKY (ban43)  #########################

# GetSCBCRKY; requires special TERM logic - NOT MAX TERM
# SCBCRKY must be a; AND is required at the end of the WHERE
# The Subject COde, Course Number and Term Code will be added by ban43
# to the end of the WHERE clause.
SCBCRKY-from:  FROM SCBCRKY a
SCBCRKY-where: WHERE 
#                     SCBCRKY_SUBJ_CODE = <Subj Code> AND
#                     SCBCRKY_CRSE_NUMB = <Crse Numb> AND                
#                 SCBCRKY_TERM_CODE_END = <Hold Term>
#SCBCRKY-where: AND  

################### SCBCRSE - COURSE (ban40)  ##########################

# Standard retrieval of the SCBCRSE records 
# SCBCRSE must be a; AND is required at the end of the WHERE
# DW4.1.0 - Removed the following lines due to ban40.ec changes as all
#           SCBCRSE records for the SubjCode/CrseNumb being processed 
#           are now read in descending sequence looking for the 
#           appropriate SCBCRSE record to use for the Class Title:
#    SCBCRSE-where:   AND a.SCBCRSE_EFF_TERM =
#    SCBCRSE-where:       (SELECT MAX(b.SCBCRSE_EFF_TERM)
#    SCBCRSE-where:          FROM SCBCRSE b
#    SCBCRSE-where:         WHERE b.SCBCRSE_SUBJ_CODE = a.SCBCRSE_SUBJ_CODE
#    SCBCRSE-where:           AND b.SCBCRSE_CRSE_NUMB = a.SCBCRSE_CRSE_NUMB)

SCBCRSE-from:  FROM SCBCRSE a, STVCSTA
SCBCRSE-where: WHERE a.SCBCRSE_CSTA_CODE = STVCSTA_CODE AND
SCBCRSE-where:        STVCSTA_ACTIVE_IND = 'A'
SCBCRSE-where:   AND

# GetClassTitle; AND is required at the end of the WHERE
# The Subject Code and Course Number used by the Class Title function
# to get the Course Title will be added to the end of the WHERE clause. 
#                     SCBCRSE_SUBJ_CODE = <Subj Code> AND
#                     SCBCRSE_CRSE_NUMB = <Crse Numb>                 

################### SCBCRSE2 - COURSE (ban40)  #########################

# GetRepeatableCourse; requires special TERM logic - NOT MAX TERM
# SCBCRSE must be a; AND is required at the end of the WHERE
# The Subject Code, Course Number and Term Code will be added by ban40
# to the end of the WHERE clause.
SCBCRSE2-from:  FROM SCBCRSE a, STVCSTA
SCBCRSE2-where: WHERE a.SCBCRSE_CSTA_CODE = STVCSTA_CODE AND
SCBCRSE2-where:        STVCSTA_ACTIVE_IND = 'A'
SCBCRSE2-where:   AND
#                     SCBCRSE_SUBJ_CODE = <Subj Code> AND
#                     SCBCRSE_CRSE_NUMB = <Crse Numb> AND                
#                     SCBCRSE_EFF_TERM <= <Hold Term>

################### SCBCRSE3 - COURSE (ban41)  #########################

# Standard retrieval of the SCBCRSE records 
# SCBCRSE must be a; AND is NOT included at the end of the WHERE
SCBCRSE3-from:  FROM SCBCRSE a, STVCSTA
SCBCRSE3-where: WHERE a.SCBCRSE_CSTA_CODE = STVCSTA_CODE AND
SCBCRSE3-where:        STVCSTA_ACTIVE_IND = 'A'
SCBCRSE3-where:   AND a.SCBCRSE_EFF_TERM =
SCBCRSE3-where:       (SELECT MAX(b.SCBCRSE_EFF_TERM)
SCBCRSE3-where:          FROM SCBCRSE b
SCBCRSE3-where:         WHERE b.SCBCRSE_SUBJ_CODE = a.SCBCRSE_SUBJ_CODE
SCBCRSE3-where:           AND b.SCBCRSE_CRSE_NUMB = a.SCBCRSE_CRSE_NUMB)

#################### SCBCRS4 - EQUIV (ban43)  #########################

# Special retrieval of the SCBCRSE records for equivalency processing.
# This SQL is used to read the SCBCRSE records for the Course Keys in
# the SCREQIV record (both OLD and NEW) and determine which ones are
# "Inactive" (if any are found). Refer to the R190DEQV section
# in the Banner BIF Mapping Documentation for details.
# SCBCRSE must be a; AND is required at the end of the WHERE
SCBCRS4-from:  FROM SCBCRSE a, STVCSTA
SCBCRS4-where: WHERE a.SCBCRSE_CSTA_CODE = STVCSTA_CODE AND
SCBCRS4-where:        STVCSTA_ACTIVE_IND = 'A'
SCBCRS4-where:   AND a.SCBCRSE_EFF_TERM =
SCBCRS4-where:       (SELECT MAX(b.SCBCRSE_EFF_TERM)
SCBCRS4-where:          FROM SCBCRSE b
SCBCRS4-where:         WHERE b.SCBCRSE_SUBJ_CODE = a.SCBCRSE_SUBJ_CODE
SCBCRS4-where:           AND b.SCBCRSE_CRSE_NUMB = a.SCBCRSE_CRSE_NUMB)
SCBCRS4-where:   AND
#                     SCBCRSE_SUBJ_CODE = <Subj Code> AND
#                     SCBCRSE_CRSE_NUMB = <Crse Numb> AND                
#                     SCBCRSE_EFF_TERM <= <Hold Term>

#################### SCBCRS5 - PREREQS (ban93)  #########################
# Special retrieval of the SCBCRSE records for a prereq report.
# This SQL is used to read the SCBCRSE records that have specified that
# prereqs should be found in DegreeWorks.
SCBCRS5-from:  FROM SCBCRSE a, STVCSTA
SCBCRS5-where: WHERE a.SCBCRSE_CSTA_CODE = STVCSTA_CODE AND
SCBCRS5-where:        STVCSTA_ACTIVE_IND = 'A'
SCBCRS5-where:   AND a.SCBCRSE_EFF_TERM =
SCBCRS5-where:       (SELECT MAX(b.SCBCRSE_EFF_TERM)
SCBCRS5-where:          FROM SCBCRSE b
SCBCRS5-where:         WHERE b.SCBCRSE_SUBJ_CODE = a.SCBCRSE_SUBJ_CODE
SCBCRS5-where:           AND b.SCBCRSE_CRSE_NUMB = a.SCBCRSE_CRSE_NUMB)
SCBCRS5-where:   AND  SCBCRSE_PREREQ_CHK_METHOD_CDE = 'D'

################### SCBCRSE6 - COURSE (dap58) ##########################

# Special retrieval of the SCBCRSE records for CourseLink
# SCBCRSE must be a; AND is required at the end of the WHERE
SCBCRSE6-from:  FROM SCBCRSE a, STVCSTA
SCBCRSE6-where: WHERE a.SCBCRSE_CSTA_CODE = STVCSTA_CODE AND
SCBCRSE6-where:        STVCSTA_ACTIVE_IND = 'A'
SCBCRSE6-where:   AND a.SCBCRSE_EFF_TERM =
SCBCRSE6-where:       (SELECT MAX(b.SCBCRSE_EFF_TERM)
SCBCRSE6-where:          FROM SCBCRSE b
SCBCRSE6-where:         WHERE b.SCBCRSE_SUBJ_CODE = a.SCBCRSE_SUBJ_CODE
SCBCRSE6-where:           AND b.SCBCRSE_CRSE_NUMB = a.SCBCRSE_CRSE_NUMB)
SCBCRSE6-where:   AND

################### SCRATTR - COURSE ATTRIBUTES (ban41)  ###############

# SCRATTR must be a; AND is NOT included at the end of the WHERE
SCRATTR-from:  FROM SCRATTR a
SCRATTR-where: WHERE a.SCRATTR_EFF_TERM =
SCRATTR-where:       (SELECT MAX(b.SCRATTR_EFF_TERM)
SCRATTR-where:          FROM SCRATTR b
SCRATTR-where:         WHERE b.SCRATTR_SUBJ_CODE = a.SCRATTR_SUBJ_CODE
SCRATTR-where:           AND b.SCRATTR_CRSE_NUMB = a.SCRATTR_CRSE_NUMB)

################### SCRATTR6 - COURSE ATTRIBUTES (dap58) ###############

# Special retrieval of SCRATTR used by CourseLink - goes with SCBCRSE6
# SCRATTR must be a; AND is NOT included at the end of the WHERE
SCRATTR6-from:  FROM SCRATTR a
SCRATTR6-where: WHERE a.SCRATTR_EFF_TERM =
SCRATTR6-where:       (SELECT MAX(b.SCRATTR_EFF_TERM)
SCRATTR6-where:          FROM SCRATTR b
SCRATTR6-where:         WHERE b.SCRATTR_SUBJ_CODE = a.SCRATTR_SUBJ_CODE
SCRATTR6-where:           AND b.SCRATTR_CRSE_NUMB = a.SCRATTR_CRSE_NUMB)

################### SCREQIV - EQUIVALENCIES (ban43)  ###################

# SCREQIV must be a; AND is NOT included at the end of the WHERE
SCREQIV-from:  FROM SCREQIV a
SCREQIV-where: 
# NO WHERE clause is included in ban40. 
# Add the entire WHERE clause if desired.

################### SCRLEVL - COURSE SCHOOL ATTRIBUTES (ban41)  ########
 
# SCRLEVL must be a; AND is NOT required at the end of the WHERE.
SCRLEVL-from:  FROM SCRLEVL a
SCRLEVL-where: WHERE a.SCRLEVL_EFF_TERM =
SCRLEVL-where:       (SELECT MAX(b.SCRLEVL_EFF_TERM)
SCRLEVL-where:          FROM SCRLEVL b
SCRLEVL-where:         WHERE b.SCRLEVL_SUBJ_CODE = a.SCRLEVL_SUBJ_CODE
SCRLEVL-where:           AND b.SCRLEVL_CRSE_NUMB = a.SCRLEVL_CRSE_NUMB)

################### SCRRTST - PREREQUISITES (ban41)  ###################

# SCRRTST must be a; AND is NOT included at the end of the WHERE
SCRRTST-from:  FROM SCRRTST a
SCRRTST-where: WHERE a.SCRRTST_TERM_CODE_EFF =
SCRRTST-where:       (SELECT MAX(b.SCRRTST_TERM_CODE_EFF)
SCRRTST-where:          FROM SCRRTST b
SCRRTST-where:         WHERE b.SCRRTST_SUBJ_CODE = a.SCRRTST_SUBJ_CODE
SCRRTST-where:           AND b.SCRRTST_CRSE_NUMB = a.SCRRTST_CRSE_NUMB)

################### SCRRTST6 - PREREQUISITES (dap58) ###################

# Special retrieval of SCRRTST used by CourseLink - goes with SCBCRSE6
# SCRRTST must be a; AND is NOT included at the end of the WHERE
SCRRTST6-from:  FROM SCRRTST a
SCRRTST6-where: WHERE a.SCRRTST_TERM_CODE_EFF =
SCRRTST6-where:       (SELECT MAX(b.SCRRTST_TERM_CODE_EFF)
SCRRTST6-where:          FROM SCRRTST b
SCRRTST6-where:         WHERE b.SCRRTST_SUBJ_CODE = a.SCRRTST_SUBJ_CODE
SCRRTST6-where:           AND b.SCRRTST_CRSE_NUMB = a.SCRRTST_CRSE_NUMB)

################### SFRSTCR - CURRENT CLASS (ban40) ####################

# SFRSTCR must be a; AND is required at the end of the WHERE
SFRSTCR-from:  FROM SFRSTCR a
SFRSTCR-where: WHERE a.SFRSTCR_RSTS_CODE  IN
SFRSTCR-where:       (SELECT STVRSTS_CODE
SFRSTCR-where:         FROM STVRSTS WHERE STVRSTS_INCL_SECT_ENRL = 'Y')
SFRSTCR-where:       AND a.SFRSTCR_GRDE_DATE is NULL
SFRSTCR-where:   AND
#                     a.SFRSTCR_PIDM = <students-pidm>

################### SFRSTCR2 - CURRENT CLASS (ban40) ####################
 
# Used during the grading period where a class could potentially be in
# SHRTCKN as well as SFRSTCR - duplicates are eliminated by ban40.ec.
# Only used when UCX_CFG020 BANNER LoadCurrentGradeIfExists = "Y".
# Removed the "a.SFRSTCR_GRDE_DATE is NULL" edit. Cannot be used here.
# However, does include a filter for Withdrawn classes - may remove the
# "OR STVRSTS_WITHDAW_IND = 'Y')"  if not checking for withdraws.
 
# SFRSTCR must be a; AND is required at the end of the WHERE
SFRSTCR2-from:  FROM SFRSTCR a
SFRSTCR2-where: WHERE a.SFRSTCR_RSTS_CODE  IN
SFRSTCR2-where:       (SELECT STVRSTS_CODE
SFRSTCR2-where:         FROM STVRSTS WHERE STVRSTS_INCL_SECT_ENRL = 'Y'
SFRSTCR2-where:           OR STVRSTS_WITHDRAW_IND = 'Y')
SFRSTCR2-where:   AND
#                     a.SFRSTCR_PIDM = <students-pidm>        

################### SGBSTDN - STUDENT GENERAL (ban40) ##################

# SGBSTDN must be a; AND is required at the end of the WHERE
SGBSTDN-from:  FROM SGBSTDN a
SGBSTDN-where: WHERE a.SGBSTDN_TERM_CODE_EFF =
SGBSTDN-where:       (SELECT MAX(b.SGBSTDN_TERM_CODE_EFF)
SGBSTDN-where:        FROM SGBSTDN b WHERE b.SGBSTDN_PIDM = a.SGBSTDN_PIDM)
SGBSTDN-where:   AND
#                    a.SGBSTDN_PIDM = <students-pidm>

################### SGRADVR - ADVISOR primary (ban40) ##################

# SGRADVR must be a; AND is required at the end of the WHERE
SGRADVR-from:  FROM SGRADVR a
SGRADVR-where: WHERE a.SGRADVR_PRIM_IND = 'Y'
SGRADVR-where:   AND a.SGRADVR_TERM_CODE_EFF =
SGRADVR-where:      (SELECT MAX(b.SGRADVR_TERM_CODE_EFF)
SGRADVR-where:       FROM SGRADVR b
SGRADVR-where:       WHERE b.SGRADVR_PIDM = a.SGRADVR_PIDM)
SGRADVR-where:   AND
#                    a.SGADVR_PIDM = <students-pidm>

################### SGRADVR2 - ADVISOR secondary (ban40) ###############

# SGRADVR must be a; AND is required at the end of the WHERE
SGRADVR2-from:  FROM SGRADVR a
SGRADVR2-where: WHERE (a.SGRADVR_PRIM_IND IS NULL or 
SGRADVR2-where:        a.SGRADVR_PRIM_IND = 'N' or
SGRADVR2-where:        a.SGRADVR_PRIM_IND = ' ')
SGRADVR2-where:   AND
#                    a.SGADVR_PIDM = <students-pidm>
#                    AND SGRADVR_TERM_CODE_EFF = <HoldTermCode>                        

################### SGRSATT - STUDENT ATTRIBUTES (ban40)  ##############

# SGRSATT must be a; AND is required at the end of the WHERE
SGRSATT-from:  FROM SGRSATT a
SGRSATT-where: WHERE a.SGRSATT_TERM_CODE_EFF =
SGRSATT-where:       (SELECT MAX(b.SGRSATT_TERM_CODE_EFF)
SGRSATT-where:          FROM SGRSATT b
SGRSATT-where:          WHERE b.SGRSATT_PIDM = a.SGRSATT_PIDM)
SGRSATT-where:   AND
#                    a.SGRSATT_PIDM = <students-pidm>

################### SGRATHE - STUDENT ATHLETE (ban40)  ##############

# SGRATHE must be a; AND is required at the end of the WHERE more is added
SGRATHE-from:  FROM SGRATHE a
SGRATHE-where: WHERE 
#                    a.SGRATHE_PIDM = <students-pidm>

################### SHBTATC - TRANSFER CATALOG DATA (ban46)  ###########
# SHBTATC_ TLVL_CODE ='01' limits only undergraduate courses
# SHBTATC must be a; AND is NOT included at the end of the WHERE
# SELECT distinct a.SHBTATC_SBGI_CODE    
SHBTATC-from:  FROM SHBTATC a
SHBTATC-where: WHERE a.SHBTATC_TRNS_REVIEW_IND = 'Y'
SHBTATC-where:   AND a.SHBTATC_TLVL_CODE ='01' 
SHBTATC-where:   AND a.SHBTATC_TAST_CODE ='AC'   
SHBTATC-where:   AND a.SHBTATC_TAST_CODE IN
SHBTATC-where:       (SELECT STVTAST_CODE FROM STVTAST
SHBTATC-where:       WHERE STVTAST_STATUS_IND = 'A')
# ORDER BY a.SHBTATC_SBGI_CODE

################### SHBTATC - TRANSFER CATALOG DATA (ban46)  ###########

# SHBTATC must be a; AND is required at the end of the WHERE
SHBTATC2-from:  FROM SHBTATC a
SHBTATC2-where: WHERE a.SHBTATC_TRNS_REVIEW_IND = 'Y'
SHBTATC2-where:   AND a.SHBTATC_TAST_CODE ='AC'  
SHBTATC2-where:   AND
#                    a.SHBTATC_SBGI_CODE = <school-sbgi-code>
################### SHRATTC - Historic Class ATTRIBUTES (ban40)  #######

# SHRATTC must be a; AND is required at the end of the WHERE
# The SHRTCKN_TERM_CODE and SHRTCKN_CRN will be added to the WHERE
# clause by ban40.ec. You may add additional WHERE requirements here.
SHRATTC-from:  FROM SHRATTC a
SHRATTC-where: WHERE 
#           SHRATTC_TERM_CODE = <SHRTCKN TermCode> 
#             AND SHRATTC_CRN = <SHRTCKN Crn>
 
################### SHRATTR - STUDENT Historic ATTRIBUTES (ban40)  #####

# SHRATTR must be a; AND is required at the end of the WHERE
SHRATTR-from:  FROM SHRATTR a
SHRATTR-where: WHERE 
#                    a.SHRATTR_PIDM = <students-pidm>

################### SHRDGMR - Degree Applied Table (ban40) ################

# Standard is to only select by student's pidm - but you may add to 
# the WHERE clause if needed - but don't forget the final AND
SHRDGMR-from:  FROM SHRDGMR a
SHRDGMR-where: WHERE
#                     a.SHRDGMR_PIDM = <students-pidm>

################### SHRGRDE - GRADE VALUES (ban40)  ####################

# SHRGRDE must be a; AND is NOT included at the end of the WHERE
SHRGRDE-from:  FROM SHRGRDE a
SHRGRDE-where: 
# NO WHERE clause is included in ban40. 
# Add the entire WHERE clause if desired.

################### SHRGRDO - GRADE VALUES (ban44)  ####################

# SHRGRDO must be a; AND is NOT included at the end of the WHERE
SHRGRDO-from:  FROM SHRGRDO a, SHRGRDE b
SHRGRDO-where: WHERE a.SHRGRDO_GRDE_CODE = b.SHRGRDE_CODE 
SHRGRDO-where:   AND a.SHRGRDO_LEVL_CODE = b.SHRGRDE_LEVL_CODE 
SHRGRDO-where:   AND a.SHRGRDO_TERM_CODE_EFFECTIVE = b.SHRGRDE_TERM_CODE_EFFECTIVE
SHRGRDO-where:   AND b.SHRGRDE_TERM_CODE_EFFECTIVE = (
SHRGRDO-where:       SELECT MAX(SHRGRDE.SHRGRDE_TERM_CODE_EFFECTIVE)
SHRGRDO-where:         FROM SHRGRDE
SHRGRDO-where:        WHERE SHRGRDE.SHRGRDE_CODE = b.SHRGRDE_CODE 
SHRGRDO-where:          AND SHRGRDE.SHRGRDE_LEVL_CODE = b.SHRGRDE_LEVL_CODE
SHRGRDO-where:          AND SHRGRDE.SHRGRDE_GRDE_STATUS_IND = 'A')
SHRGRDO-where:   AND b.SHRGRDE_GRDE_STATUS_IND = 'A'
# NO WHERE clause is included in ban44. 
# Change this WHERE clause if desired. 

################### SHRICMT - TRANSFER COURSE COMMENT (ban46)  #########

# SHRICMT must be a; AND is NOT included at the end of the WHERE
SHRICMT-from:  FROM SHRICMT a
SHRICMT-where: WHERE a.SHRICMT_SEQNO IN (1,2) AND 

################### SHRLGPA - GPA VALUES (ban40)  ######################

# SHRLGPA must be a; AND is required at the end of the WHERE
SHRLGPA-from:  FROM SHRLGPA a
SHRLGPA-where: WHERE 
#                    a.SHRLGPA_PIDM = <students-pidm>

################### SHRTATC - TRANSFER ARTICULATION (ban46)  ###########

# SHRTATC must be a; AND is NOT included at the end of the WHERE
SHRTATC-from:  FROM SHRTATC a
SHRTATC-where: WHERE 

################### SHRTATT - TRANSFER ATTRIBUTES (ban40)  #############

# SHRTATT must be a; AND is required at the end of the WHERE
SHRTATT-from:  FROM SHRTATT a
SHRTATT-where: WHERE 
#                    a.SHRTATT_PIDM = <students-pidm>

################### SHRTCKD - Link to SHRDGMR (ban40) ##################

# Standard is to only select by student's pidm - but you may add to 
# the WHERE clause if needed - but don't forget the final AND
SHRTCKD-from:  FROM SHRTCKD a
SHRTCKD-where: WHERE a.SHRTCKD_APPLIED_IND is not null AND
#                    a.SHRTCKD_PIDM = <students-pidm>

################### SHRTCKG - GRADE CODES (ban40) ######################

# Standard is to only select by student's pidm - but you may add to 
# the WHERE clause if needed - but don't forget the final AND
SHRTCKG-from:  FROM SHRTCKG a
SHRTCKG-where: WHERE
#                    a.SHRTCKG_PIDM = <students-pidm>

################### SHRTCKL - LEVL CODES (ban40) #######################

# Standard is to only select by student's pidm - but you may add to 
# the WHERE clause if needed - but don't forget the final AND
SHRTCKL-from:  FROM SHRTCKL a
SHRTCKL-where: WHERE
#                     a.SHRTCKL_PIDM = <students-pidm>

################### SHRTCKN - HISTORIC CLASS (ban40) ###################

# Standard is to only select by student's pidm - but you may add to 
# the WHERE clause if needed - but don't forget the final AND
SHRTCKN-from:  FROM SHRTCKN a
SHRTCKN-where: WHERE
#                     a.SHRTCKN_PIDM = <students-pidm>

################### SHRNCRS - Non-Course (ban40) #######################

# Standard is to only select by student's pidm - but you may add to 
# the WHERE clause if needed - but don't forget the final AND
SHRNCRS-from:  FROM SHRNCRS a
SHRNCRS-where: WHERE
#                     a.SHRNCRS_PIDM = <students-pidm>

################### SHRQPNM - Non-Course Status (ban40) ################

# Standard is to only select by student's pidm - but you may add to 
# the WHERE clause if needed - but don't forget the final AND
SHRQPNM-from:  FROM SHRQPNM a
SHRQPNM-where: WHERE
#                     a.SHRQPNM_PIDM = <students-pidm>

############# SHRTRCD - TRANSFER COURSE DEGREE APPLIED (ban40) #########

# Standard is to only select by student's pidm - but you may add to 
# the WHERE clause if needed - but don't forget the final AND
SHRTRCD-from:  FROM SHRTRCD a
SHRTRCD-where: WHERE a.SHRTRCD_APPLIED_IND = 'Y' AND
#                     a.SHRTRCD_PIDM = <students-pidm>

################### SHRTRCE - TRANSFER EQUIVALENT (ban40) ##############

# Standard is to only select by student's pidm - but you may add to 
# the WHERE clause if needed - but don't forget the final AND
SHRTRCE-from:  FROM SHRTRCE a
SHRTRCE-where: WHERE
#                     a.SHRTRCE_PIDM = <students-pidm>

################### SHRTRCR - TRANSFER CLASS (ban40) ###################

# Standard is to only select by student's pidm - but you may add to 
# the WHERE clause if needed - but don't forget the final AND
SHRTRCR-from:  FROM SHRTRCR a
SHRTRCR-where: WHERE
#                     a.SHRTRCR_PIDM = <students-pidm>

################### SHRTRIT - TRANSFER CLASS(ban40) ####################

# Standard is to only select by student's pidm - but you may add to 
# the WHERE clause if needed - but don't forget the final AND
SHRTRIT-from:  FROM SHRTRIT a
SHRTRIT-where: WHERE
#                     a.SHRTRIT_PIDM = <students-pidm>

################### SMRPRLE - STU316 - PROGRAM CODES (ban44)  ###########

# SMRPRLE must be a; AND is NOT included at the end of the WHERE
SMRPRLE-from:  FROM SMRPRLE a
SMRPRLE-where: 
# NO WHERE clause is included in ban44. 
# Add the entire WHERE clause if desired.

################### SOBCURR - CURRRULE (ban48)  ########################

# SOBCURR must be a; AND is required at the end of the WHERE
# The SOBCURR_CURR_RULE will be added to the WHERE clause by ban48. 
# You may add additional WHERE requirements here.
SOBCURR-from:  FROM SOBCURR a
SOBCURR-where: 
# NO WHERE clause is included in ban48. 

################### SOBSBGI - ETS ADDRESS (ban42)  #####################

# SOBSBGI must be a; AND is required at the end of the WHERE
# The SOBSBGI_CODE will be added to the WHERE clause by ban42. 
# You may add additional WHERE requirements here.
SOBSBGI-from:  FROM SOBSBGI a
SOBSBGI-where: WHERE 
#                   SOBSBGI_CODE = <Hold SOBSBGI Code>

################### SORBTAG - SORBTAG (ban42)  #########################

# SORBTAG must be a; AND is required at the end of the WHERE
# The SBGI_CODE will be added by ban42
# to the end of the WHERE clause.
SORBTAG-from:  FROM SORBTAG a
SORBTAG-where: WHERE 
#                     SORBTAG_SBGI_CODE = <Hold Sbgi Code> 

################### SORCCON - CURRRULE Concentrations (ban48)  #########

# SORCCON must be a; AND is required at the end of the WHERE
# The SOBCURR_CURR_RULE will be added to the WHERE clause by ban48. 
# You may add additional WHERE requirements here.
SORCCON-from:  FROM SORCCON a
SORCCON-where: WHERE 
#                   SORCCON_CURR_RULE = <Hold SOBCURR Curr Rule>

################### SORCMJR - CURRRULE Majors (ban48)  #################

# SORCMJR must be a; AND is required at the end of the WHERE
# The SOBCURR_CURR_RULE will be added to the WHERE clause by ban48. 
# You may add additional WHERE requirements here.
SORCMJR-from:  FROM SORCMJR a
SORCMJR-where: WHERE 
#                   SORCMJR_CURR_RULE = <Hold SOBCURR Curr Rule>
#  CONC Attach SQL: SORCMJR_CMJR_RULE = <Hold SORCCON Cmjr Rule>

################### SORCMNR - CURRRULE Minors (ban48)  #################

# SORCMNR must be a; AND is required at the end of the WHERE
# The SOBCURR_CURR_RULE will be added to the WHERE clause by ban48. 
# You may add additional WHERE requirements here.
SORCMNR-from:  FROM SORCMNR a
SORCMNR-where: WHERE 
#                   SORCMNR_CURR_RULE = <Hold SOBCURR Curr Rule>

################### SORDEGR - PREVIOUS DEGREE (ban40) ##################

# Standard is to only select by student's pidm - but you may add to 
# the WHERE clause if needed - but don't forget the final AND
SORDEGR-from:  FROM SORDEGR a
SORDEGR-where: WHERE
#                     a.SORDEGR_PIDM = <students-pidm>

################### SORLCUR - LEARNER CURRICULUM (ban40) ###############

# SORLCUR must be a; AND is required at the end of the WHERE
SORLCUR-from:  FROM SORLCUR a
SORLCUR-where: WHERE a.SORLCUR_CACT_CODE = 'ACTIVE'
SORLCUR-where:   AND a.SORLCUR_SEQNO     =
SORLCUR-where:    (SELECT MAX(b.SORLCUR_SEQNO) FROM SORLCUR b
SORLCUR-where:      WHERE b.SORLCUR_PIDM        = a.SORLCUR_PIDM
SORLCUR-where:        AND b.SORLCUR_PRIORITY_NO = a.SORLCUR_PRIORITY_NO
SORLCUR-where:        AND b.SORLCUR_LMOD_CODE   = 'LEARNER') 
SORLCUR-where:   AND
#                    a.SORLCUR_PIDM = <students-pidm>

################### SORLFOS - STUDENT FIELD OF STUDY (ban40) ###########

# SORLFOS must be a; AND is required at the end of the WHERE
SORLFOS-from:  FROM SORLFOS a, SORLCUR b
SORLFOS-where: WHERE b.SORLCUR_CACT_CODE  = 'ACTIVE'
SORLFOS-where:   AND b.SORLCUR_SEQNO =
SORLFOS-where:    (SELECT MAX(c.SORLCUR_SEQNO) FROM SORLCUR c
SORLFOS-where:      WHERE c.SORLCUR_PIDM        = b.SORLCUR_PIDM
SORLFOS-where:        AND c.SORLCUR_PRIORITY_NO = b.SORLCUR_PRIORITY_NO
SORLFOS-where:        AND c.SORLCUR_LMOD_CODE   = 'LEARNER')
SORLFOS-where:   AND a.SORLFOS_CSTS_CODE  = 'INPROGRESS' 
SORLFOS-where:   AND a.SORLFOS_CACT_CODE  = 'ACTIVE'          
SORLFOS-where:   AND a.SORLFOS_PIDM       = b.SORLCUR_PIDM
SORLFOS-where:   AND a.SORLFOS_LCUR_SEQNO = b.SORLCUR_SEQNO
SORLFOS-where:   AND
#                    a.SORLFOS_PIDM = <students-pidm>

################### SORLCUR2 - ADMISSIONS CURRICULUM (ban40) ############

# SORLCUR must be a; AND is required at the end of the WHERE
SORLCUR2-from:   FROM SORLCUR a, STVTERM t, SARADAP c
SORLCUR2-where: WHERE (SELECT COUNT(*) FROM SHRTRCR
SORLCUR2-where: WHERE SHRTRCR_PIDM = c.SARADAP_PIDM) > 0
# SORLCUR2-where: AND t.STVTERM_START_DATE > SYSDATE
SORLCUR2-where:   AND ((SELECT COUNT(*) FROM SGBSTDN
SORLCUR2-where: WHERE SGBSTDN_PIDM = c.SARADAP_PIDM) < 1
SORLCUR2-where:    OR (SELECT COUNT(*) FROM STVSTST, SGBSTDN p
SORLCUR2-where: WHERE STVSTST_CODE = p.SGBSTDN_STST_CODE
SORLCUR2-where:   AND STVSTST_REG_IND = 'Y'
SORLCUR2-where:   AND p.SGBSTDN_TERM_CODE_EFF = (SELECT MAX
SORLCUR2-where:      (o.SGBSTDN_TERM_CODE_EFF) FROM SGBSTDN o
SORLCUR2-where: WHERE o.SGBSTDN_PIDM = p.SGBSTDN_PIDM
SORLCUR2-where:   AND o.SGBSTDN_TERM_CODE_EFF <
SORLCUR2-where:       c.SARADAP_TERM_CODE_ENTRY)) < 1)
SORLCUR2-where:   AND a.SORLCUR_CACT_CODE = 'ACTIVE'
SORLCUR2-where:   AND a.SORLCUR_LMOD_CODE = 'ADMISSIONS'
SORLCUR2-where:   AND a.SORLCUR_SEQNO = (SELECT MAX(b.SORLCUR_SEQNO)
SORLCUR2-where:  FROM SORLCUR b
SORLCUR2-where: WHERE b.SORLCUR_PIDM = a.SORLCUR_PIDM
SORLCUR2-where:   AND b.SORLCUR_PRIORITY_NO = a.SORLCUR_PRIORITY_NO
SORLCUR2-where:   AND b.SORLCUR_LMOD_CODE = 'ADMISSIONS')
SORLCUR2-where:   AND a.SORLCUR_PIDM = c.SARADAP_PIDM
SORLCUR2-where:   AND a.SORLCUR_TERM_CODE = c.SARADAP_TERM_CODE_ENTRY
SORLCUR2-where:   AND a.SORLCUR_KEY_SEQNO = c.SARADAP_APPL_NO
SORLCUR2-where:   AND t.STVTERM_CODE = c.SARADAP_TERM_CODE_ENTRY 
SORLCUR2-where: AND
#                    a.SORLCUR_PIDM = <students-pidm>

################### SORLFOS2 - APPLICANT FIELD OF STUDY (ban40) ########

# SORLFOS must be a; AND is required at the end of the WHERE
SORLFOS2-from:   FROM SORLFOS a, SORLCUR b, STVTERM t, SARADAP d
SORLFOS2-where: WHERE (SELECT COUNT(*) FROM SHRTRCR
SORLFOS2-where: WHERE SHRTRCR_PIDM = d.SARADAP_PIDM) > 0
# SORLFOS2-where: AND t.STVTERM_START_DATE > SYSDATE
SORLFOS2-where:   AND ((SELECT COUNT(*) FROM SGBSTDN
SORLFOS2-where: WHERE SGBSTDN_PIDM = d.SARADAP_PIDM) < 1
SORLFOS2-where:    OR (SELECT COUNT(*) FROM STVSTST, SGBSTDN p
SORLFOS2-where: WHERE STVSTST_CODE = p.SGBSTDN_STST_CODE
SORLFOS2-where:   AND STVSTST_REG_IND = 'Y'
SORLFOS2-where:   AND p.SGBSTDN_TERM_CODE_EFF = (SELECT MAX
SORLFOS2-where:      (o.SGBSTDN_TERM_CODE_EFF) FROM SGBSTDN o
SORLFOS2-where: WHERE o.SGBSTDN_PIDM = p.SGBSTDN_PIDM
SORLFOS2-where:   AND o.SGBSTDN_TERM_CODE_EFF <
SORLFOS2-where:       d.SARADAP_TERM_CODE_ENTRY)) < 1)
SORLFOS2-where:   AND b.SORLCUR_CACT_CODE = 'ACTIVE'
SORLFOS2-where:   AND b.SORLCUR_LMOD_CODE = 'ADMISSIONS'
SORLFOS2-where:   AND b.SORLCUR_SEQNO = (SELECT MAX(f.SORLCUR_SEQNO)
SORLFOS2-where:  FROM SORLCUR f
SORLFOS2-where: WHERE f.SORLCUR_PIDM = b.SORLCUR_PIDM
SORLFOS2-where:   AND f.SORLCUR_PRIORITY_NO = b.SORLCUR_PRIORITY_NO
SORLFOS2-where:   AND f.SORLCUR_LMOD_CODE = 'ADMISSIONS')
SORLFOS2-where:   AND b.SORLCUR_PIDM = d.SARADAP_PIDM
SORLFOS2-where:   AND b.SORLCUR_TERM_CODE = d.SARADAP_TERM_CODE_ENTRY
SORLFOS2-where:   AND b.SORLCUR_KEY_SEQNO = d.SARADAP_APPL_NO
SORLFOS2-where:   AND t.STVTERM_CODE = d.SARADAP_TERM_CODE_ENTRY
SORLFOS2-where:   AND a.SORLFOS_CSTS_CODE = 'INPROGRESS'
SORLFOS2-where:   AND a.SORLFOS_CACT_CODE = 'ACTIVE'
SORLFOS2-where:   AND a.SORLFOS_PIDM = b.SORLCUR_PIDM
SORLFOS2-where:   AND a.SORLFOS_LCUR_SEQNO = b.SORLCUR_SEQNO
SORLFOS2-where:   AND a.SORLFOS_SEQNO =
SORLFOS2-where:      (SELECT MAX(l.SORLFOS_SEQNO) FROM SORLFOS l
SORLFOS2-where: WHERE l.SORLFOS_PIDM = b.SORLCUR_PIDM
SORLFOS2-where:   AND l.SORLFOS_PRIORITY_NO = a.SORLFOS_PRIORITY_NO
SORLFOS2-where:   AND l.sorlfos_csts_code = 'INPROGRESS'
SORLFOS2-where:   AND l.SORLFOS_LCUR_SEQNO = b.SORLCUR_SEQNO)
SORLFOS2-where: AND
#                    a.SORLFOS_PIDM = <students-pidm>

################### SORLCUR3 - LEARNER CURRICULUM (ban62) ###############

# SORLCUR must be a; AND is required at the end of the WHERE
SORLCUR3-from:  FROM SORLCUR a
SORLCUR3-where: WHERE a.SORLCUR_CACT_CODE = 'ACTIVE'
SORLCUR3-where:   AND a.SORLCUR_SEQNO     =
SORLCUR3-where:    (SELECT MAX(b.SORLCUR_SEQNO) FROM SORLCUR b
SORLCUR3-where:      WHERE b.SORLCUR_PIDM        = a.SORLCUR_PIDM
SORLCUR3-where:        AND b.SORLCUR_PRIORITY_NO = a.SORLCUR_PRIORITY_NO
SORLCUR3-where:        AND b.SORLCUR_LMOD_CODE   = 'LEARNER') 
SORLCUR3-where:   AND
#                    a.SORLCUR_PIDM = <students-pidm>

################### SORMCRL - CURRRULE (ban48)  ########################

# SORMCRL must be a; AND is required at the end of the WHERE
# The SORMCRL_CURR_RULE will be added to the WHERE clause by ban48. 
# You may add additional WHERE requirements here.
SORMCRL-from:  FROM SORMCRL a
SORMCRL-where: WHERE
#                   SORMCRL_CURR_RULE = <Hold SOBCURR Curr Rule>

################### SORTEST - PREVIOUS DEGREE (ban40) ##################

# Standard is to only select by student's pidm - but you may add to 
# the WHERE clause if needed - but don't forget the final AND
SORTEST-from:  FROM SORTEST a
SORTEST-where: WHERE
#                     a.SORTEST_PIDM = <students-pidm>

################### SPRIDENADV - Advisor (ban40) #######################

# Standard is to only select by advisor's pidm and a SPRIDEN_CHANGE_IND
# of NULL - but you may add to the WHERE clause if needed - 
#           but don't forget the final AND
SPRIDENADV-from:  FROM SPRIDEN a
SPRIDENADV-where: WHERE 
#                     a.SPRIDEN_PIDM = <advisors-pidm>
#                 AND a.SPRIDEN_CHANGE_IND IS NULL

################### SPRIDEN - Individual (ban40/ban45/ban47) ###########

# Standard is to only select by the SPRIDEN_PIDM and a SPRIDEN_CHANGE_IND
# of NULL - but you may add to the WHERE clause if needed - 
#           but don't forget the final AND
SPRIDEN-from:  FROM SPRIDEN a
SPRIDEN-where: WHERE 
#                     a.SPRIDEN_PIDM = <individual's pidm>
#                 AND a.SPRIDEN_CHANGE_IND IS NULL

################### SSBSECT - SCHEDULE (ban40)  ########################

# SSBSECT must be a; AND is required at the end of the WHERE
# The following SQL will be added to the WHERE clause by ban40 for the
# specific cases below. You may add additional WHERE requirements here.
SSBSECT-from:  FROM SSBSECT a, STVSSTS
SSBSECT-where: WHERE a.SSBSECT_SSTS_CODE = STVSSTS_CODE AND 
SSBSECT-where:         STVSSTS_ACTIVE_IND = 'A' AND

# GetBannerTables - SSBSECT - ban40 calculates a Start Term from 
# January 1 from the previous year and loads those records into an array
#                   SSBSECT_TERM_CODE >= <Start Term>

# GetSSBSECT - used in BuildClassCurrent to retrieve the matching
# SSBSECT record for the SFRSTCR <hold> class being processed.
#                   SSBSECT_TERM_CODE >= <Hold Term>
#                      AND SSBSECT_CRN = <Hold CRN>

# When checking DegreeWorks REQUISITE blocks against Banner.
# We use this lookup to see if the TERM+CRN actually exists.
#                   SSBSECT_TERM_CODE >= <Hold Term>
#                      AND SSBSECT_CRN = <Hold CRN>

# ProcessCourseSections in COURSELINK - lookup course within term range
#                   SSBSECT_SUBJ_CODE =  <HoldSubjCode> AND
#                   SSBSECT_CRSE_NUMB =  <HoldCrseNumb> AND
#                   SSBSECT_TERM_CODE >= <HoldTermCode> AND
#                   SSBSECT_TERM_CODE <= <HoldTermCode>

################### SSBSEC2 - PREREQS (ban93)  ########################
# SSBSEC2 must be a; AND is required at the end of the WHERE
# The following SQL will be added to the WHERE clause by ban93 for the
# specific term specified. You may add additional WHERE requirements here.
SSBSEC2-from:  FROM SSBSECT a
SSBSEC2-where: WHERE  SSBSECT_PREREQ_CHK_METHOD_CDE = 'D'
SSBSEC2-where:        AND
#                     SSBSECT_TERM_CODE = '<some term>'
# and also by specific TERM+CRN
#                     SSBSECT_TERM_CODE = '<some term>'
#                     SSBSECT_CRN = '<some CRN>'

################### SSBSECT3 - Course Link (dap58) ########################
# SSBSECT3 must be a; AND is required at the end of the WHERE
# The following SQL will be added to the WHERE clause by dap58 for the
# specific term range specified. The term start term is defined in UCX-CFG020 # COURSELINK.
# You may add additional WHERE requirements here to limit the sections that
# appear in the Course Link pop-up window on the web.
############################################################################
SSBSECT3-from: FROM SSBSECT a, STVSSTS
SSBSECT3-where: WHERE a.SSBSECT_SSTS_CODE = STVSSTS_CODE AND
SSBSECT3-where: STVSSTS_ACTIVE_IND = 'A' AND
# SSBSECT_SUBJ_CODE = <SubjCode> AND
# SSBSECT_CRSE_NUMB = <CrseNumb> AND
# SSBSECT_TERM_CODE >= <RegStartTermCode> AND
# SSBSECT_TERM_CODE <= <RegEndTermCode>

################### SSRATTR - SCHEDULE ATTRIBUTES (ban40)  #############

# SSRATTR must be a; AND is required at the end of the WHERE
# The SFRSTCR_TERM_CODE and SFRSTCR_CRN will be added to the WHERE
# clause by ban40. You may add additional WHERE requirements here
SSRATTR-from:  FROM SSRATTR a
SSRATTR-where: WHERE 
#                   SFRSTCR_TERM_CODE = <Hold Term>
#                     AND SFRSTCR_CRN = <Hold CRN>

################### SSRMEET - COURSE SECTION MEETINGS (dap58)  #############

# SSRMEET must be a; AND is required at the end of the WHERE
# The SSRSECT_TERM_CODE and SSRSECT_CRN will be added to the WHERE
# clause by dap58. You may add additional WHERE requirements here.
SSRMEET-from:  FROM SSRMEET a
SSRMEET-where: WHERE 
#                   SSBSECT_TERM_CODE = <Hold Term>
#                     AND SSBSECT_CRN = <Hold CRN>

################### SSRXLST - COURSE SECTION CROSS-LISTING (dap58)  ###########
# SSRXSLST must be a; AND is required at the end of the WHERE
# The SSRXLST_TERM_CODE and SSRXLST_CRN will be added to the WHERE
# clause by dap58. You may add additional WHERE requirements here.
SSRXLST-from:  FROM SSRXLST a
SSRXLST-where: WHERE 
#                   SSRXLST_TERM_CODE = <ssbsect Term>
#                     AND SSRXLST_CRN = <ssbsect CRN>

################### SSBXLST - COURSE SECTION CROSS-LISTING (dap58)  ###########
# SSBXSLST must be a; AND is required at the end of the WHERE
# The SSBXLST_TERM_CODE and SSBXLST_XLST_GROUP will be added to the WHERE
# clause by dap58. You may add additional WHERE requirements here.
SSBXLST-from:  FROM SSBXLST a
SSBXLST-where: WHERE 
#                   SSBXLST_TERM_CODE        = <ssbsect term>
#                     AND SSBXLST_XLST_GROUP = <ssrxlst xlst-group>


################### STVACYR - CATALOG YEARS (ban43/ban44)  #############

# STVACYR must be a; AND is NOT included at the end of the WHERE
STVACYR-from:  FROM STVACYR a
STVACYR-where: 
# NO WHERE clause is included in ban40. 
# Add the entire WHERE clause if desired.


################### STVCLAS - STU305 - STUDENT LEVELS (ban44)  #########

# STVCLAS must be a; AND is NOT included at the end of the WHERE
STVCLAS-from:  FROM STVCLAS a
STVCLAS-where: 
# NO WHERE clause is included in ban40. 
# Add the entire WHERE clause if desired.

################### STVCOLL - STU560 - COLLEGE CODES (ban44)  ##########

# STVCOLL must be a; AND is NOT included at the end of the WHERE
STVCOLL-from:  FROM STVCOLL a
STVCOLL-where: 
# NO WHERE clause is included in ban40. 
# Add the entire WHERE clause if desired.

################### STVCSTA - STU035 -CATALOG STATUS (ban43)  ##########

# STVCSTA must be a; AND is NOT included at the end of the WHERE
STVCSTA-from:  FROM STVCSTA a
STVCSTA-where: 
# NO WHERE clause is included in ban40. 
# Add the entire WHERE clause if desired.

################### STVDEGC - STU307 - DEGREE CODES (ban44)  ###########

# STVDEGC must be a; AND is NOT included at the end of the WHERE
STVDEGC-from:  FROM STVDEGC a
STVDEGC-where: 
# NO WHERE clause is included in ban40. 
# Add the entire WHERE clause if desired.

################### STVACCL - STU346 - CALENDAR CODES (ban44)  ############

# STVACCL must be a; AND is NOT included at the end of the WHERE
STVACCL-from:  FROM STVACCL a
STVACCL-where: 
# NO WHERE clause is included in ban44. 
# Add the entire WHERE clause if desired.

################### STVGMOD - STU356 - GRADE TYPES (ban44)  ############

# STVGMOD must be a; AND is NOT included at the end of the WHERE
STVGMOD-from:  FROM STVGMOD a
STVGMOD-where: 
# NO WHERE clause is included in ban40. 
# Add the entire WHERE clause if desired.

################### STVLEVL - STU350 - SCHOOL CODES (ban44)  ###########

# STVLEVL must be a; AND is NOT included at the end of the WHERE
STVLEVL-from:  FROM STVLEVL a
STVLEVL-where: 
# NO WHERE clause is included in ban40. 
# Add the entire WHERE clause if desired.

################### STVMAJR - STU023/024 - MAJORs/MINORs (ban44)  ######

# STVMAJR must be a; AND is NOT included at the end of the WHERE
STVMAJR-from:  FROM STVMAJR a
STVMAJR-where: 
# NO WHERE clause is included in ban40. 
# Add the entire WHERE clause if desired.

################### STVNATN - COUNTRY CODES (ban42)  ##########

# STVNATN must be a; AND is NOT included at the end of the WHERE
STVNATN-from:  FROM STVNATN a
STVNATN-where: 
# NO WHERE clause is included in ban40. 
# Add the entire WHERE clause if desired.

################### STVNCRQ - NON COURSE VALUES (ban40)  ###############

# STVNCRQ must be a; AND is NOT included at the end of the WHERE
STVNCRQ-from:  FROM STVNCRQ a
STVNCRQ-where: 
# NO WHERE clause is included in ban40. 
# Add the entire WHERE clause if desired.

################### STVNCST - NON COURSE STATUS (ban40)  ###############

# STVNCST must be a; AND is NOT included at the end of the WHERE
STVNCST-from:  FROM STVNCST a
STVNCST-where: 
# NO WHERE clause is included in ban40. 
# Add the entire WHERE clause if desired.

################### STVQPTP - NON COURSE VALUES (ban40)  ###############

# STVQPTP must be a; AND is NOT included at the end of the WHERE
STVQPTP-from:  FROM STVQPTP a
STVQPTP-where: 
# NO WHERE clause is included in ban40. 
# Add the entire WHERE clause if desired.

################### STVSBGI - ETS CODES (ban40)  #######################
#  to get the population of external schools you want to accept transfer work from
# STVSBGI must be a; AND is required at the end of the WHERE
# The STVSBGI_CODE will be added to the WHERE clause by ban40. 
# You may add additional WHERE requirements here.
STVSBGI-from:  FROM STVSBGI a
STVSBGI-where: WHERE 
STVSBGI-where:          a.STVSBGI_TYPE_IND != 'H'
#                   STVSBGI_CODE = <Hold STVSBGI Code>
STVSBGI-where: AND

################### STVSBGI2 - ETS CODES (ban42)  #######################

# STVSBGI must be a; AND is NOT included at the end of the WHERE
STVSBGI2-from:  FROM STVSBGI a
STVSBGI2-where: 
# NO WHERE clause is included in ban42. 
# Add the entire WHERE clause if desired.

################### STVSTYP - STU306 - STUDENT STATUS CODES (ban44)  ###

# STVSTYP must be a; AND is NOT included at the end of the WHERE
STVSTYP-from:  FROM STVSTYP a
STVSTYP-where: 
# NO WHERE clause is included in ban40. 
# Add the entire WHERE clause if desired.

################### STVSUBJ - STU352 - SUBJECT CODES (ban44)  ##########

# STVSUBJ must be a; AND is NOT included at the end of the WHERE
STVSUBJ-from:  FROM STVSUBJ a
STVSUBJ-where: 
# NO WHERE clause is included in ban40. 
# Add the entire WHERE clause if desired.

################### STVATTR - STU050 - ATTRIBUTE CODES (ban44 and dap58)  ##########

# STVATTR must be a; AND is NOT included at the end of the WHERE
STVATTR-from:  FROM STVATTR a
STVATTR-where: 
# NO WHERE clause is included in ban44. 
# Add the entire WHERE clause if desired.

################### STVTERM - STU016 - TERM CODES (ban40/ban44/dap58) ##

# STVTERM must be a; AND is NOT included at the end of the WHERE
STVTERM-from:  FROM STVTERM a
STVTERM-where: 
# NO WHERE clause is included in ban40. 
# Add the entire WHERE clause if desired.

################### TWGBWSES - WEB ID Table (ban47) ####################

# TWGBWSES must be a; The 'from/where' keys below are truncated to
# "TWGBWSE-from:" and "TWGBWSE-where:" as only 7-bytes is allowed
# currently by the calling extract programs. 
# Elsewhere use the correct 8-byte table name: TWGBWSES
# Standard is to only select by Web Session ID - but you may add to 
# the WHERE clause if needed - but don't forget the final AND
TWGBWSE-from:  FROM TWGBWSES a
TWGBWSE-where: WHERE
#                   TWGBWSES_WEBID = <Hold Web Session>

################### PASSWORDSTU - WEB Password (ban40) #################

# This special SQL is used to create the piece of data to be loaded
# into the shp_access_code for use as the SHP password for Students. 

# The maximum length of each piece of the SQL clause is as follows:
# Select SQL  [3000]
# Where SQL   [3000]
# From SQL    [1000]
# OrderBy SQL [1000]

# The SELECT clause MUST only return 1 data value which can be 
# concatenated from many fields or pieces of fields if desired.
# The first data value returned will be used as the SHP password.
# If the value is BLANK or no valid record is found a RANDOM
# password will automatically be generated.

# The = {STU_PIDM} MUST be included somewhere in your WHERE clause.
# The {STU_PIDM} will be replaced with the real PIDM being processed.
 
# DO NOT DELETE THE ENTRIES BELOW!!! LEAVE THE KEYS AND BLANK OUT 
# EVERYTHING AFTER THE COLON IF A RANDOM PASSWORD IS TO BE GENERATED!!!

PASSWORDSTU-select:
PASSWORDSTU-from:
PASSWORDSTU-where: 
# PASSWORDSTU-where: 
PASSWORDSTU-orderby:

################### PASSWORDADV - WEB Password (ban45) #################

# This special SQL is used to create the piece of data to be loaded
# into the shp_access_code for use as the SHP password for Advisors. 

# The maximum length of each piece of the SQL clause is as follows:
# Select SQL  [3000]
# Where SQL   [3000]
# From SQL    [1000]
# OrderBy SQL [1000]

# The SELECT clause MUST only return 1 data value which can be 
# concatenated from many fields or pieces of fields if desired.
# The first data value returned will be used as the SHP password.
# If the value is BLANK or no valid record is found a RANDOM
# password will automatically be generated.

# The = {ADV_PIDM} MUST be included somewhere in your WHERE clause.
# The {ADV_PIDM} will be replaced with the real PIDM being processed.
 
# DO NOT DELETE THE ENTRIES BELOW!!! LEAVE THE KEYS AND BLANK OUT 
# EVERYTHING AFTER THE COLON IF A RANDOM PASSWORD IS TO BE GENERATED!!!

PASSWORDADV-select:
PASSWORDADV-from:
PASSWORDADV-where:
PASSWORDADV-orderby:

################### PASSWORDSTF - WEB Password (ban45) #################

# This special SQL is used to create the piece of data to be loaded
# into the shp_access_code for use as the SHP password for Staff. 

# The maximum length of each piece of the SQL clause is as follows:
# Select SQL  [3000]
# Where SQL   [3000]
# From SQL    [1000]
# OrderBy SQL [1000]

# The SELECT clause MUST only return 1 data value which can be 
# concatenated from many fields or pieces of fields if desired.
# The first data value returned will be used as the SHP password.
# If the value is BLANK or no valid record is found a RANDOM
# password will automatically be generated.

# The = {STF_PIDM} MUST be included somewhere in your WHERE clause.
# The {STF_PIDM} will be replaced with the real PIDM being processed.
 
# DO NOT DELETE THE ENTRIES BELOW!!! LEAVE THE KEYS AND BLANK OUT 
# EVERYTHING AFTER THE COLON IF A RANDOM PASSWORD IS TO BE GENERATED!!!


PASSWORDSTF-select:                                                      
PASSWORDSTF-from:    
PASSWORDSTF-where:     
PASSWORDSTF-orderby:  

########################################################################

################### SHRTRAM/SHRTRIT ####################################
# Used for ban60 (RollTreQToBanner) to get the max shrtram_seq_no
#      for insertion into SHRTRTK.SHRTRTK_TRAM_SEQ_NO
# SHRTRAM must be a; AND is required at the end of the WHERE
# The shrtram_pidm = shrtrit_pidm, 
#     shrtram_trit_seq_no = shrtrit_seq_no 
# will be added to the WHERE clause by ban60. 
# You may add additional WHERE requirements here.
SHRTRAM-from:  FROM SHRTRAM a, SHRTRIT b
SHRTRAM-where: WHERE 
#                   shrtram_pidm = shrtrit_pidm AND
#                   shrtram_trit_seq_no = shrtrit_seq_no
#                   shrtram_pidm = <Pidm>

################### SCBCRSE/SCRATTR ####################################
# Used for dap58 (Courselink) to get courses with specific attributes
# You may add additional WHERE requirements here.
COURSELINKATTR-from:  FROM SCBCRSE a, SCRATTR b
#COURSELINKATTR-where: WHERE
COURSELINKATTR-where: WHERE a.SCBCRSE_EFF_TERM = 
COURSELINKATTR-where: (SELECT MAX(c.SCBCRSE_EFF_TERM) 
COURSELINKATTR-where: FROM SCBCRSE c 
COURSELINKATTR-where: WHERE c.SCBCRSE_SUBJ_CODE = a.SCBCRSE_SUBJ_CODE 
COURSELINKATTR-where: AND c.SCBCRSE_CRSE_NUMB = a.SCBCRSE_CRSE_NUMB) 
COURSELINKATTR-where: AND b.SCRATTR_EFF_TERM = 
COURSELINKATTR-where: (SELECT MAX(D.SCRATTR_EFF_TERM) 
COURSELINKATTR-where: FROM SCRATTR D 
COURSELINKATTR-where: WHERE D.SCRATTR_SUBJ_CODE = B.SCRATTR_SUBJ_CODE 
COURSELINKATTR-where: AND D.SCRATTR_CRSE_NUMB = B.SCRATTR_CRSE_NUMB) 
COURSELINKATTR-where: AND

